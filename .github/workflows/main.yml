name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
# Check if CSV file has been modified
  check_data:
    runs-on: ubuntu-latest
    outputs:
      train_model: ${{ steps.check_files.outputs.train_model }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      
      - name: Check CSV file modification
        id: check_files
        run: |
            CSV_FILE="app/data/keypoint_classifier/keypoint.csv"
            git fetch
            LAST_COMMIT_TOUCHING_CSV=$(git log -1 --format="%at" -- $CSV_FILE)
            
            if [ -z "$LAST_COMMIT_TOUCHING_CSV" ]; then
              echo "No recent commits affecting $CSV_FILE found."
              exit 1
            fi
            
            CURRENT_TIME=$(date +%s)
            TIME_SINCE_LAST_CHANGE=$((CURRENT_TIME - LAST_COMMIT_TOUCHING_CSV))
            
            echo "Time since last commit affecting CSV: $TIME_SINCE_LAST_CHANGE seconds"
            
            if [ $TIME_SINCE_LAST_CHANGE -gt 0 ]; then
              echo "Training model required."
              echo "::set-output name=train_model::true"
            else
              echo "No training required."
              echo "::set-output name=train_model::false"
            fi

# Train model with new data
  train:
    needs: check_data
    if: needs.check_data.outputs.train_model == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      
      - name: SSH and Train Model
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            source signlingo/bin/activate
            cd SignLingo
            git checkout .
            git pull
            cd app
            python3 utils/train.py

# Build and deploy app
  build_app:
    needs: check_data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            source signlingo/bin/activate
            cd SignLingo
            git checkout .
            git pull
            cd app
            PID=$(lsof -ti:8501)
            if [[ -n $PID ]]; then
              echo "Killing Streamlit process on port 8501"
              kill -9 $PID
            fi
            nohup streamlit run app.py --server.sslCertFile=server.crt --server.sslKeyFile=server.key > /dev/null 2>&1 &
